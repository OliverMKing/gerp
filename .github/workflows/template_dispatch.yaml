name: Template dispatch

on:
  workflow_call:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setVariables.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: setVariables
        run: |
          repos=$(jq '.repos | keys' -c .gerp/config.json)
          echo "::set-output name=matrix::$repos"
  dispatch:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        repo: ${{fromJson(needs.setup.outputs.matrix)}}
    steps:
      - name: Checkout Template Repo
        uses: actions/checkout@v3
        with:
          path: "template-repo"
      - name: Install Mustache
        run: npm install -g mustache
      - name: Checkout Target Repo
        uses: actions/checkout@v3
        with:
          repository: ${{matrix.repo}}
          path: "target-repo"
      - name: Create New Target Repo Branch
        run: |
          cd $GITHUB_WORKSPACE/target-repo
          git checkout -b gerp-$(date +%s)
          cd $GITHUB_WORKSPACE
      - name: Generate files
        run: |
          repo=${{ matrix.repo }}
          jq --arg repo "$repo" '.repos[$repo].inputs' $GITHUB_WORKSPACE/template-repo/.gerp/config.json > inputs.json
          for f in $(find $GITHUB_WORKSPACE/template-repo/template -type f); do
            outpath=$GITHUB_WORKSPACE/target-repo/${f#./*/}
            mkdir -p $(dirname $outpath) && touch $outpath
            mustache inputs.json $f > $outpath
            echo generated $outpath
          done
      - name: make PR
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{secrets.PAT}}
          path: target-repo
          commit-message: "GERP updated files from templates"
